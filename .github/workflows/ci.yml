name: CI devops 2025

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & Test (Maven verify)
        working-directory: backend-spring
        run: mvn -B clean verify

      # --- Analyse Qualité SonarCloud (Quality Gate) ---
      - name: SonarCloud Scan
        working-directory: backend-spring
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=<PROJECT_KEY> \
            -Dsonar.organization=<ORG_KEY> \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    name: CD – Build & Push Docker images
    needs: test-backend                # attend que la CI réussisse
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ github.ref == 'refs/heads/main' }}   # push seulement sur main
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Backend
      - name: Build & (conditional) push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend-spring
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tp-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/tp-backend:${{ github.sha }}

      # Database
      - name: Build & (conditional) push database
        uses: docker/build-push-action@v6
        with:
          context: ./database
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/my-database:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/my-database:${{ github.sha }}

      # HTTPD (dé-commente si le dossier httpd/ existe avec un Dockerfile)
      - name: Build & (conditional) push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./httpd
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tp-httpd:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/tp-httpd:${{ github.sha }}